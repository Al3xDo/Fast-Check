# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.7"
#     - name: Make envfile
#       uses: SpicyPizza/create-envfile@v1
#       with:
#         envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
#         envkey_DB_NAME: ${{ secrets.DB_NAME }}
#         envkey_DB_HOST: ${{ secrets.DB_HOST }}
#         envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#         directory: ./server
#         file_name: .env
    - name: Install dependencies
      working-directory: ./server
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3800 # Optional, default value is 3306. The port of host
        container port: 3307 # Optional, default value is 3306. The port of container
        character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
        mysql database: fast_check_test' # Optional, default value is "test". The specified database which will be create
        mysql root password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
#         mysql user: ${{ secrets.DB_NAME }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
#         mysql password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"
    - name: Test with unittest
      working-directory: ./server
      run: |
        touch .env
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        cat .env
        python manage.py test

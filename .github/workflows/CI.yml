name: CI

on:
  # push:
  #   branches: [develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          MYSQL_DATABASE: fast_check_test
        ports: ["3306:3306"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install dependencies
        working-directory: ./server
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Create env file
        uses: SpicyPizza/create-envfile@v1
        with:
          DB_PROD_HOST: ${{ secrets.DB_PROD_HOST }}
          DB_DOCKER_HOST: ${{ secrets.DB_DOCKER_HOST }}
          RESULT_BACKEND: ${{ secrets.RESULT_BACKEND }}
          BROKER_URL: ${{ secrets.BROKER_URL }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_DEFAULT_SENDER: ${{ secrets.MAIL_DEFAULT_SENDER }}
          file_name: .env

      - name: init database
        working-directory: ./server
        env:
          API_ENV: action_test
          DB_NAME: "${{ secrets.DB_NAME }}"
          DB_HOST: "${{ secrets.DB_HOST }}"
          DB_PORT: "${{ secrets.DB_PORT }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
        run: |
          chmod +x "./setup.sh"
          chmod +x "./setup.py"
          ./setup.sh
          python ./setup.py
      - name: Test with unittest
        working-directory: ./server
        env:
          API_ENV: action_test
        run: |
          python manage.py test

        # touch .env
        # echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
        # cat .env
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: fastcheck/app:latest
  # cd:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Build, Push and Deploy to Heroku #set the whatever name you want to this step
  #       id: heroku
  #       uses: snithyanantham/docker-compose-multiple-apps-heroku-deploy@v1.0  # use the latest version of the action
  #       with:
  #         email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
  #         api_key: ${{ secrets.HEROKU_API_KEY }} # your  heroku api key
  #         docker_compose_file: './docker-compose.heroku.yml' # set the path to the folder where the docker-compose file is located
  #         heroku_apps: '[{"imagename":"fast-check-client","appname":"app1","apptype":"web"},{"imagename":"fast-check-server","appname":"app2","apptype":"web"},{"imagename":"app3","appname":"app2","apptype":"worker"}]' # List of Docker Image name, Heroku app and Heroku app type
